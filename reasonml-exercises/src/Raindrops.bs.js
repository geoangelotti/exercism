// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");

function divi(n, i, msg) {
  if (Caml_int32.mod_(n, i) === 0) {
    return msg;
  }
  
}

function clean(param) {
  return param !== undefined;
}

function clean2(message) {
  if (message !== undefined) {
    return message;
  } else {
    return "";
  }
}

function raindrops(n) {
  var messagesOption_0 = divi(n, 3, "Pling");
  var messagesOption_1 = {
    hd: divi(n, 5, "Plang"),
    tl: {
      hd: divi(n, 7, "Plong"),
      tl: /* [] */0
    }
  };
  var messagesOption = {
    hd: messagesOption_0,
    tl: messagesOption_1
  };
  var messages = List.filter(clean)(messagesOption);
  if (List.length(messages) > 0) {
    return List.fold_left((function (prim, prim$1) {
                  return prim + prim$1;
                }), "", List.map(clean2, messagesOption));
  } else {
    return String(n);
  }
}

exports.raindrops = raindrops;
/* No side effect */
