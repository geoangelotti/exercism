// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.bs.js");
var $$String = require("bs-platform/lib/js/string.js");
var Accumulate = require("../src/Accumulate.bs.js");

function square(x) {
  return Math.imul(x, x);
}

function reverse(x) {
  return x.split("").reverse().join("");
}

Jest.describe("Accumulate", (function (param) {
        Jest.test("[] Accumulate", (function (param) {
                return Jest.Expect.toEqual(/* [] */0, Jest.Expect.expect(Accumulate.accumulate(square, /* [] */0)));
              }));
        Jest.test("square Accumulate", (function (param) {
                return Jest.Expect.toEqual({
                            hd: 1,
                            tl: {
                              hd: 4,
                              tl: {
                                hd: 9,
                                tl: /* [] */0
                              }
                            }
                          }, Jest.Expect.expect(Accumulate.accumulate(square, {
                                    hd: 1,
                                    tl: {
                                      hd: 2,
                                      tl: {
                                        hd: 3,
                                        tl: /* [] */0
                                      }
                                    }
                                  })));
              }));
        Jest.test("toUpper Accumulate", (function (param) {
                return Jest.Expect.toEqual({
                            hd: "HELLO",
                            tl: {
                              hd: "WORLD",
                              tl: /* [] */0
                            }
                          }, Jest.Expect.expect(Accumulate.accumulate($$String.uppercase_ascii, {
                                    hd: "hello",
                                    tl: {
                                      hd: "world",
                                      tl: /* [] */0
                                    }
                                  })));
              }));
        return Jest.test("reverse Accumulate", (function (param) {
                      return Jest.Expect.toEqual({
                                  hd: "olleh",
                                  tl: {
                                    hd: "dlrow",
                                    tl: /* [] */0
                                  }
                                }, Jest.Expect.expect(Accumulate.accumulate(reverse, {
                                          hd: "hello",
                                          tl: {
                                            hd: "world",
                                            tl: /* [] */0
                                          }
                                        })));
                    }));
      }));

exports.square = square;
exports.reverse = reverse;
/*  Not a pure module */
